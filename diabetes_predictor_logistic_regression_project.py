# -*- coding: utf-8 -*-
"""Diabetes_Predictor - Logistic_Regression_Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MzgbB6rFap32UaIl9Cq6sH0XBpajAtLz

##Importing Libraries
"""

import pandas as pd
import numpy as mp
import matplotlib.pyplot as plt
import seaborn as sns

"""##Importing the "Diabetes" Dataset"""

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/diabetes.csv')
df.head()

df.info()

"""Checking missing value"""

df.isnull().sum()

"""##Spliting the Data"""

X = df.drop(columns='Outcome')
y = df['Outcome']

"""Train split import"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.2, random_state=42)

"""##Training and Prediction

Importing the Model
"""

from sklearn.linear_model import LogisticRegression

"""Train the model"""

logistic_model = LogisticRegression(max_iter=1000)

logistic_model.fit(X_train, y_train)

"""Prediction (getting y_pred)"""

y_pred = logistic_model.predict(X_test)

"""##Evaluating the model prediction"""

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

evaluation = {'Accuracy': accuracy_score,'Clasification Report': classification_report, 'Confusion Matrix': confusion_matrix}

# I passed using the keyword argument method
for metric_name, metric_function in evaluation.items():
  print(f'\n {metric_name}')
  result = metric_function(y_test, y_pred)
  print("Result:\n", result)
  print("-" * 50)

print("âœ… Evaluation completed.")

"""##Model Deployment"""

import pickle

with open('diabetespredictor.pkl', 'wb') as f:
  pickle.dump(logistic_model, f)

